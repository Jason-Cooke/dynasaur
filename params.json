{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Dynasaur","google":"","tagline":"DynamoDB ORM for Node.js","body":"![Amazon and Dynasaur](https://github.com/tglines/dynasaur/raw/master/dino.png)\r\n\r\ndynasaur\r\n========\r\n\r\nA DynamoDB ORM for Node.js\r\n\r\nIt aims to provide a few added features that most people will want from a DynamoDB tool.  These things include a Mongoose inspired way of doing things, periodic S3 backups, multi-indexing (clones data to seperate tables, having different indexes on each) and more.\r\n\r\nFor now it provides a simple way to interact with DynamoDB and create/read rows in the table.  More features coming.\r\n\r\n\r\n## An Example\r\n\r\n### Install Dynasaur\r\n\r\n```bash\r\nnpm install dynasaur\r\n```\r\n\r\n### Defining a Model\r\n\r\n\r\n```coffeescript\r\nmodule.exports = (dynasaur) ->\r\n\r\n  blog_post_schema =\r\n    attributes:\r\n      author: String\r\n      title: String\r\n      body: String\r\n      date: Number\r\n    index: [{type:'hash',field:'author'}, {type:'range',fields:['title','date']}]\r\n\r\n  BlogPost = dynasaur.model 'BlogPost', blog_post_schema\r\n```\r\n\r\n\r\n\r\n### Saving the blog post\r\n\r\nFirst make sure that the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` shell variables are set to their respective values.\r\n\r\n```coffeescript\r\naws_settings = {\r\n  credentials: {\r\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\r\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\r\n  },\r\n  region:'us-west-1'\r\n}\r\n\r\ndynasaur = require 'dynasaur'\r\n\r\nBlogPost = require('./models/BlogPost')(dynasaur)\r\n\r\nblog_post = BlogPost.new()\r\nblog_post.title = 'Dynasaur'\r\nblog_post.author = 'Someone'\r\nblog_post.body = 'Dynasaur is a DynamoDB ORM that builds some neat features on top of DynamoDB'\r\nblog_post.date = new Date().getTime()\r\nblog_post.save (err,data) ->\r\n  console.log err\r\n```\r\n\r\n### Reading some posts back out, select one at random ... reload it and delete it\r\n\r\nThe tool every serious tech blogger needs\r\n\r\n```coffeescript\r\nBlogPost.find {}, (err,blog_posts) ->\r\n  console.log blog_posts\r\n  n = Math.floor( Math.random() * blog_posts.length)\r\n  BlogPost.get {id:blog_posts[n].id}, (err,blog_post_to_delete) ->\r\n    console.log blog_post_to_delete\r\n    blog_post_to_delete.remove (err) ->\r\n       console.log 'REMOVED'\r\n```\r\n\r\n## Stuff to come\r\n\r\n* Periodic (user defined time) backups to S3\r\n* Multi-indexing to allow one data type to be indexed via multiple keys (we'll use DynamoDB's strong consistency and data replication here)\r\n* Elastic Map Reduce (so you can run SQL like queries over the data sets you store)\r\n\r\n\r\n## Shoulders it stands on\r\n\r\nA big thanks go out to Jed Schmidt and other contributors for [dynamo](https://github.com/jed/dynamo) which sits as an API abstraction for DynamoDB that made this process significantly easier.\r\n\r\nAnother big thanks go out to all the contributors of [mongoose](https://github.com/LearnBoost/mongoose) as it was a huge inspiration to the design of how users interact with the project.\r\n\r\n\r\n## License \r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Travis Glines &lt;travisglines [->] gmail.com &gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n"}