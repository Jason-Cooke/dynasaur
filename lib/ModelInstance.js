// Generated by CoffeeScript 1.3.3
(function() {
  var ModelInstance, uuid;

  uuid = require('node-uuid');

  ModelInstance = (function() {

    function ModelInstance(model) {
      this.model = model;
      this.paused = true;
      this.queued_actions = [];
      this.setAttributes();
      this;

    }

    ModelInstance.prototype.setAttributes = function() {
      var attribute, _results;
      this.id = uuid.v1();
      _results = [];
      for (attribute in this.model.schema.attributes) {
        if (typeof attribute === 'string') {
          _results.push(this[attribute] = '');
        } else if (typeof attribute === 'number') {
          _results.push(this[attribute] = 0);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    ModelInstance.prototype.unpause = function() {
      var action, _i, _len, _ref, _results;
      this.paused = false;
      _ref = this.queued_actions;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        action = _ref[_i];
        _results.push(action());
      }
      return _results;
    };

    ModelInstance.prototype.dump = function() {
      return console.log(this);
    };

    ModelInstance.prototype.save = function(cb) {
      var attribute, attributes,
        _this = this;
      attributes = {};
      attributes.id = this.id;
      for (attribute in this.model.schema.attributes) {
        attributes[attribute] = this[attribute];
      }
      if (this.paused) {
        return this.queued_actions.push(function() {
          return _this.model.table.put(attributes).save(cb);
        });
      } else {
        return this.model.table.put(attributes).save(cb);
      }
    };

    return ModelInstance;

  })();

  module.exports = ModelInstance;

}).call(this);
